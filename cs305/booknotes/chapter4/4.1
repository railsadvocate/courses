- in the divide and conquer approach, we solve a problem recursively by applying three steps at each level of the recursion:
	1. Divide the problem into a number of subproblems that are smaller instances of the same problem.
	2. Conquer the subproblems by solving them recursively. If the subproblem sizes are small enough, however, then solve the subproblems in a straigtforward manner
	3. Combine the solutions to the subproblems into the solution for the original subproblem. 
- when the subproblems are large enough to be solved recursively, we call that the recursive case. Once the subproblems become small enough that we no longer recurse, we say that the recursion 'bottoms-out' and that we have gotten down to the base case. 
- recurrences go hand in hand with the divide and conquer paradigm, because they give as a natural way to characterize the running times of divide-and-conquer algorithms
- A recurrence is an equation or inequality and describes a function in terms of its value on smaller inputs. 
