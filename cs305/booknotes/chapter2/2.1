Insertion Sort
--------------
1. Insertion sort solves the sorting problem introduced in chapter 1.
2. The numbers we wish to sort are known as keys.
3. Insertion sort is an efficient sorting algorithm for sorting a small number of elements.
4. The algorithm sorts the input numbers in place. 

- the value of A[j] represents the current card being sorted into the hand
- at the beginning of each iteration of the for loop, the subarray A[0..j-1] is sorted. Also notice that this sorted subarray contains the same values that were originally in A[0..j-1] just in a different order. the subarray from A[j+1..n] are the elements yet to be sorted. 
- Since we know that the subarray A[0..j-1] is always sorted at the start of the for loop, we can formally establish a loop invariant as follows: At the start of each iteration of the for loop, the subarray of A[0..j-1] consists of the elements originally in A[0..j-1] but in sorted order.

Loop invariants
---------------
We must show three things about a loop invariant:
1. Initialization: it is true prior to the first iteration of the loop
2. Maintenance: if it is true before an iteration of the loop, it remains true before the next iteration.
3. Termination: When the loop terminates, the invariant gives us a useful property that helps show that the algorithm is correct. 
